"""empty message

Revision ID: 0939dc75ffcc
Revises: 
Create Date: 2023-03-13 14:38:51.532666

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0939dc75ffcc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('business', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('business_id_seq'::regclass)"))
        batch_op.create_unique_constraint(None, ['id'])

    with op.batch_alter_table('business_insurance', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['id'])

    with op.batch_alter_table('insurance', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['id'])

    with op.batch_alter_table('units', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['id'])
        batch_op.create_foreign_key(None, 'insurance', ['id_Insurance'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('units', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('insurance', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('business_insurance', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('business', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('business_id_seq'::regclass)"))

    # ### end Alembic commands ###
